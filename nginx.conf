# GhostCrate Nginx Configuration
# Deploy this configuration on your separate nginx reverse proxy server
#
# Usage:
# 1. Copy this file to your nginx server (e.g., /etc/nginx/sites-available/ghostcrate)
# 2. Update the server_name to match your domain
# 3. Update the proxy_pass to point to your GhostCrate server IP/port
# 4. Enable the site: ln -s /etc/nginx/sites-available/ghostcrate /etc/nginx/sites-enabled/
# 5. Test and reload: nginx -t && systemctl reload nginx

upstream ghostcrate_backend {
    server 10.0.0.38:8080;
    # Add more backend servers for load balancing if needed:
    # server 10.0.1.101:8080;
    # server 10.0.1.102:8080;
}

server {
    listen 80;
    server_name crates.cktech.org;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name crates.cktech.org;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/certs/cktech.org/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/cktech.org/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Client upload limits for crate publishing
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 8k;
    proxy_buffers 32 8k;
    proxy_busy_buffers_size 16k;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Main location block - proxy all requests to GhostCrate
    location / {
        proxy_pass http://ghostcrate_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Cargo registry API - optimized for crate operations
    location /api/v1/crates {
        proxy_pass http://ghostcrate_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Increase timeouts for large crate uploads
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Disable buffering for streaming uploads
        proxy_request_buffering off;
        proxy_buffering off;
    }
    
    # Health check endpoint - no caching
    location /health {
        proxy_pass http://ghostcrate_backend;
        proxy_http_version 1.1;
        proxy_Set_header Host $host;
        proxy_Set_header X-Real-IP $remote_addr;
        proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_Set_header X-Forwarded-Proto $scheme;
        
        # No caching for health checks
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        access_log off;
    }
    
    # Static assets - cache for performance
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://ghostcrate_backend;
        proxy_http_version 1.1;
        proxy_Set_header Host $host;
        proxy_Set_header X-Real-IP $remote_addr;
        proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_Set_header X-Forwarded-Proto $scheme;
        
        # Cache static assets for 1 year
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Enable efficient file serving
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
    }
    
    # Metrics endpoint (optional - uncomment if using Prometheus)
    # location /metrics {
    #     proxy_pass http://ghostcrate_backend;
    #     proxy_http_version 1.1;
    #     proxy_Set_header Host $host;
    #     proxy_Set_header X-Real-IP $remote_addr;
    #     proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_Set_header X-Forwarded-Proto $scheme;
    #     
    #     # Restrict access to metrics (adjust as needed)
    #     allow 10.0.0.0/8;     # Private networks
    #     allow 172.16.0.0/12;  # Private networks
    #     allow 192.168.0.0/16; # Private networks
    #     deny all;
    # }
    
    # Logging
    access_log /var/log/nginx/ghostcrate_access.log combined;
    error_log /var/log/nginx/ghostcrate_error.log warn;
}

# Optional: Rate limiting configuration (uncomment to enable)
# limit_req_zone $binary_remote_addr zone=ghostcrate_api:10m rate=60r/m;
# limit_req_zone $binary_remote_addr zone=ghostcrate_upload:10m rate=10r/m;

# Apply rate limiting in location blocks:
# location /api/v1/crates {
#     limit_req zone=ghostcrate_upload burst=5 nodelay;
#     # ... rest of config
# }
